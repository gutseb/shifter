---
# tasks file for containerize
- debug:
    var: hostvars[source_host].services_to_enable

- name: Set container version
  set_fact:
    os_major_version: "{{ hostvars[source_host].ansible_distribution_major_version }}"

- name: Set OS name to rhel
  set_fact:
    os_name: "rhel"
  when: "'RedHat' in '{{ hostvars[source_host].ansible_distribution }}'"

- name: Set OS name to centos
  set_fact:
    os_name: "centos"
  when: "'CenOS' in '{{ hostvars[source_host].ansible_distribution }}'"

- name: Set OS name to fedora
  set_fact:
    os_name: "fedora"
  when: "'Fedora' in '{{ hostvars[source_host].ansible_distribution }}'"

- name: Set container name
  set_fact:
    container_name: "{{ 'shifted_from_' + source_host }}"

- name: Prepend used services
  set_fact:
    container_name: "{{ [service_name,container_name | default('')] | join('_') }}"
  with_items: "{{ hostvars[source_host].services_to_enable }}"
  loop_control:
    loop_var: service_name

- name: Prepend OS name and version
  set_fact:
    container_name: "{{ os_name + os_major_version + '_' + container_name }}"

- debug:
    var: container_name

- name: Copy template Dockerfile
  template:
    src: Dockerfile.j2
    dest: /tmp/Dockerfile
  when: not docker_use_remote

- name: Create container using command module
  include: with_command.yml
  when: not docker_use_remote

- name: Create container using docker_container module
  include: with_docker_container.yml
  when: docker_use_remote
